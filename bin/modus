#!/usr/bin/env node

var program = require('commander');
require('../dist/Modus');
require('../lib/build');

program
  .version(modus.VERSION)
  .usage('<options> [commands]')
  .option('-m, --minify', 'Minify the compiled script (using UglifyJs)')
  .option('-r, --root <root>', "Set the root path for the module.\n"
          + "                   This will be used in addition to modus.config('root').")
  .on('--help', function(){
    console.log('  Examples:\n');
    console.log('   $ modus foo.main build/app.min.js --root scripts --minify')
    console.log('   $ modus foo/main.js foo/app-min.js --root app/scripts --minify\n');
  });

program
  .command('* [main] [dest]')
  .description('build modus app into a single file')
  .action(function(main, dest){

    var rootPath = (program.root)
      ? process.cwd() + '/' + program.root + '/'
      : process.cwd() + '/';

    var settings = {
      root: rootPath,
      main: main,
      dest: dest,
      minify: program.minify || false
    };

    var build = modus.Build.getInstance();
    build.start(settings).once('done', function (compiled) {
      if (dest) build.writeOutput(dest);
    });

  })

program.parse(process.argv);
if (!program.args.length) program.help();